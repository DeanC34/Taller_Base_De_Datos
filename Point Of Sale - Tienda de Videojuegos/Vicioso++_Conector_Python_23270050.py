import mysql.connector
from mysql.connector import Error

#######
# √Ångel Soto P√©rez - S5A - 23270050 - 15/03/2025
# CRUD para el POS "Vicioso++" con conexi√≥n a MySQL
#######

# üîó Funci√≥n para conectar a la base de datos
def conectar_bd():
    try:
        conexion = mysql.connector.connect(
            host="localhost",        # Cambia si usas otro host
            user="root",             # Tu usuario de MySQL
            password="tu_contrase√±a", # Tu contrase√±a de MySQL
            database="ViciosoPP"     # La base de datos del POS
        )
        if conexion.is_connected():
            print("‚úÖ Conexi√≥n exitosa a la base de datos")
        return conexion
    except Error as error:
        print(f"‚ùå Error al conectar con MySQL: {error}")
        return None

# üìå CRUD para la tabla Producto
def crear_producto():
    nombre = input("Ingrese el nombre del producto: ").strip()
    descripcion = input("Ingrese la descripci√≥n del producto: ").strip()
    precio = float(input("Ingrese el precio del producto: "))
    stock = int(input("Ingrese el stock inicial: "))
    id_categoria = int(input("Ingrese el ID de la categor√≠a: "))
    id_proveedor = int(input("Ingrese el ID del proveedor: "))

    conexion = conectar_bd()
    if conexion:
        try:
            cursor = conexion.cursor()
            sql = "INSERT INTO Producto (nombre, descripcion, precio, stock, id_categoria, id_proveedor) VALUES (%s, %s, %s, %s, %s, %s)"
            valores = (nombre, descripcion, precio, stock, id_categoria, id_proveedor)
            cursor.execute(sql, valores)
            conexion.commit()
            print(f"‚úÖ Producto '{nombre}' agregado correctamente.")
        except Error as error:
            print(f"‚ùå Error al insertar el producto: {error}")
        finally:
            cursor.close()
            conexion.close()

def leer_productos():
    conexion = conectar_bd()
    if conexion:
        try:
            cursor = conexion.cursor()
            cursor.execute("SELECT * FROM Producto")
            productos = cursor.fetchall()

            print("\nüì¶ Lista de productos:")
            for producto in productos:
                print(f"üÜî {producto[0]} | {producto[1]} | üí≤ {producto[3]} | üè∑Ô∏è Stock: {producto[4]}")
        except Error as error:
            print(f"‚ùå Error al leer los productos: {error}")
        finally:
            cursor.close()
            conexion.close()

def actualizar_producto():
    id_producto = int(input("Ingrese el ID del producto a actualizar: "))
    nuevo_nombre = input("Ingrese el nuevo nombre: ").strip()
    nuevo_precio = float(input("Ingrese el nuevo precio: "))
    nuevo_stock = int(input("Ingrese el nuevo stock: "))

    conexion = conectar_bd()
    if conexion:
        try:
            cursor = conexion.cursor()
            sql = "UPDATE Producto SET nombre = %s, precio = %s, stock = %s WHERE id_producto = %s"
            valores = (nuevo_nombre, nuevo_precio, nuevo_stock, id_producto)
            cursor.execute(sql, valores)
            conexion.commit()
            if cursor.rowcount > 0:
                print("‚úÖ Producto actualizado exitosamente.")
            else:
                print("‚ö†Ô∏è No se encontr√≥ un producto con ese ID.")
        except Error as error:
            print(f"‚ùå Error al actualizar el producto: {error}")
        finally:
            cursor.close()
            conexion.close()

def eliminar_producto():
    id_producto = int(input("Ingrese el ID del producto a eliminar: "))

    conexion = conectar_bd()
    if conexion:
        try:
            cursor = conexion.cursor()
            sql = "DELETE FROM Producto WHERE id_producto = %s"
            valores = (id_producto,)
            cursor.execute(sql, valores)
            conexion.commit()
            if cursor.rowcount > 0:
                print("‚úÖ Producto eliminado exitosamente.")
            else:
                print("‚ö†Ô∏è No se encontr√≥ un producto con ese ID.")
        except Error as error:
            print(f"‚ùå Error al eliminar el producto: {error}")
        finally:
            cursor.close()
            conexion.close()

# üìå Men√∫ principal
def menu():
    while True:
        print("\nüéÆ MEN√ö CRUD - Productos en Vicioso++")
        print("1Ô∏è‚É£ - Crear un nuevo producto")
        print("2Ô∏è‚É£ - Leer todos los productos")
        print("3Ô∏è‚É£ - Actualizar un producto")
        print("4Ô∏è‚É£ - Eliminar un producto")
        print("5Ô∏è‚É£ - Salir")

        opcion = input("Seleccione una opci√≥n: ").strip()

        if opcion == '1':
            crear_producto()
        elif opcion == '2':
            leer_productos()
        elif opcion == '3':
            actualizar_producto()
        elif opcion == '4':
            eliminar_producto()
        elif opcion == '5':
            print("üëã Saliendo del programa...")
            break
        else:
            print("‚ö†Ô∏è Opci√≥n no v√°lida. Intente nuevamente.")

# üèÅ Ejecutar el men√∫
menu()
